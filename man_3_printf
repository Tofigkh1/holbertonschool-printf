.TH PRINTF 3 "30 November 2024" "Holbeton School Project" "Library Functions"

.SH NAME
_printf \- produces formatted output

.SH SYNOPSIS
#include <stdio.h>
int _printf(const char *format, ...);

.SH DESCRIPTION
to the standard output (stdout) according to the provided format string.

The _printf function is a simplified version of the standard printf function. It processes a format string and prints corresponding arguments based on the format specifiers. It supports basic specifiers for printing characters, strings, and integers, as well as a literal percent sign.

The following format specifiers are supported:
.IP %c
Prints a single character.
.IP %s
Prints a string of characters (null-terminated).
.IP %%
Prints a literal percent sign.
.IP %d
Prints a signed decimal number (base 10).
.IP %i
Prints a signed integer (base 10).

The function processes the format string, handles each specifier, and prints the appropriate output. It skips over any non-specifier characters and prints them directly.

.SH PARAMETERS
.TP
format
A pointer to a null-terminated string containing the format specifiers and the characters to be printed.

.TP
...
A variable number of arguments that correspond to the format specifiers in the format string.

.SH RETURN VALUE
On success, _printf returns the total number of characters printed (excluding the null byte). If an error occurs (such as a null format string or an invalid format specifier), the function returns -1.

.SH ERRORS
If the format string is NULL or contains only a percent sign with no specifier following it, the function returns -1. If an unrecognized format specifier is encountered, the function will print the specifier itself and return the number of characters printed.

If the string is NULL , the function will return ("null")

.SH EXAMPLES
.TP
_printf("Hello %s!\n", "World");
Prints: Hello World!

.TP
_printf("Character: %c\n", 'A');
Prints: Character: A

.TP
_printf("Percent sign: %%\n");
Prints: Percent sign: %

.SH SEE ALSO
.BR printf (3)

_printf("Number: %d\n", 42);
Prints: Number: 42

.TP
_printf("Invalid specifier: %z\n");
Prints: %z (the percent sign and the specifier)

.SH SEE ALSO
printf(3), va_start(3), va_arg(3)

.SH AUTHORS 
Brenda Pollagba , Abdellah Dydouh 

